package handlers

import (
	"mattermost-bot/internal/models"
	"mattermost-bot/internal/service"

	"github.com/mattermost/mattermost-server/v6/model"
	"go.uber.org/zap"
)

func HandleClosePoll(s service.PollService, bot *models.Bot, post *model.Post, args []string) {
	if len(args) != 1 {
		replyToPost(bot, post, "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: /close <ID –æ–ø—Ä–æ—Å–∞>")
		bot.Logger.Info("–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /close")
		return
	}

	err := s.ClosePoll(args[0], post.UserId)
	if err != nil {
		replyToPost(bot, post, "‚ùå –û—à–∏–±–∫–∞: "+err.Error())
		bot.Logger.Info("–í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", zap.Error(err))
		return
	}

	SendMessageToChannel(bot, post.ChannelId, "üîí –û–ø—Ä–æ—Å –∑–∞–∫—Ä—ã—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /results –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏—Ç–æ–≥–æ–≤")
	bot.Logger.Info("–û–ø—Ä–æ—Å –∑–∞–∫—Ä—ã—Ç",
		zap.String("poll_id", args[0]),
		zap.String("user_id", post.UserId),
		zap.String("channel_id", post.ChannelId),
	)
}
